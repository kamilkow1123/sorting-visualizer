{"version":3,"sources":["SortingAlgorithms/mergeSort.js","SortingAlgorithms/bubbleSort.js","SortingAlgorithms/heapSort.js","SortingAlgorithms/quickSort.js","hooks/useWindowSize.js","SortingVisualizer/SortingVisualizer.jsx","withHooksHOC.js","App.js","index.js"],"names":["mergeSortHelper","mainArray","startIdx","endIdx","auxiliaryArray","animations","middleIdx","Math","floor","doMerge","k","i","j","push","bubbleSort","array","length","compare","swap","first","heapSort","n","heapify","temp","largest","l","r","quickSort","pi","partition","left","right","pivot","getWindowSize","window","width","innerWidth","height","innerHeight","PRIMARY_COLOR","SECONDARY_COLOR","SortingVisualizer","props","enableButtons","setState","disabledButtons","disableButtons","algorithm","getBubbleSortAnimations","state","isMobile","screenWidth","arrayBars","document","getElementsByClassName","lastOne","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","animationSpeed","barOneValue","barTwoValue","getHeapSortAnimations","isColorChange","mergeSort","slice","getMergeSortAnimations","newValue","getQuickSortAnimations","pivotStyle","arraySizeChange","event","resetArray","target","value","animationSpeedChange","isAlgorithmRunning","this","size","maxValue","min","max","random","className","onClick","disabled","type","step","onChange","map","idx","React","Component","withHooksHOC","useState","windowSize","setWindowSize","useEffect","isMounted","addEventListener","useWindowSize","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5e03a56.chunk.js","sourcesContent":["export const getMergeSortAnimations = (array) => {\r\n\tconst animations = [];\r\n\tif (array.length <= 1) return array;\r\n\tconst auxiliaryArray = array.slice();\r\n\tmergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n\treturn animations;\r\n};\r\n\r\nconst mergeSortHelper = (mainArray, startIdx, endIdx, auxiliaryArray, animations) => {\r\n\tif (startIdx === endIdx) return;\r\n\tconst middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n\tmergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n\tmergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n\tdoMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n};\r\n\r\nconst doMerge = (mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations) => {\r\n\tlet k = startIdx;\r\n\tlet i = startIdx;\r\n\tlet j = middleIdx + 1;\r\n\r\n\twhile (i <= middleIdx && j <= endIdx) {\r\n\t\t//These are the values that we're comparing; we push them once to change their color\r\n\t\tanimations.push([ i, j ]);\r\n\t\t//These are the values that we're comparing; we push them a second time to revert their color\r\n\t\tanimations.push([ i, j ]);\r\n\r\n\t\tif (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n\t\t\t//We overwrite the value at index k in the original array with the value at index i in the auxiliary array\r\n\t\t\tanimations.push([ k, auxiliaryArray[i] ]);\r\n\t\t\tmainArray[k++] = auxiliaryArray[i++];\r\n\t\t} else {\r\n\t\t\t//We overwrite the value at index k in the original array with the value at index j in the auxiliary array\r\n\t\t\tanimations.push([ k, auxiliaryArray[j] ]);\r\n\t\t\tmainArray[k++] = auxiliaryArray[j++];\r\n\t\t}\r\n\t}\r\n\r\n\twhile (i <= middleIdx) {\r\n\t\t//These are the values that we're comparing; we push them once to change their color\r\n\t\tanimations.push([ i, i ]);\r\n\t\t//These are the values that we're comparing; we push them a second time to revert their color\r\n\t\tanimations.push([ i, i ]);\r\n\t\t//We overwrite the value at index k in the original array with the value at index i in the auxiliary array\r\n\t\tanimations.push([ k, auxiliaryArray[i] ]);\r\n\t\tmainArray[k++] = auxiliaryArray[i++];\r\n\t}\r\n\r\n\twhile (j <= endIdx) {\r\n\t\t//These are the values that we're comparing; we push them once to change their color\r\n\t\tanimations.push([ j, j ]);\r\n\t\t//These are the values that we're comparing; we push them a second time to revert their color\r\n\t\tanimations.push([ j, j ]);\r\n\t\t//We overwrite the value at index k in the original array with the value at index j in the auxiliary array\r\n\t\tanimations.push([ k, auxiliaryArray[j] ]);\r\n\t\tmainArray[k++] = auxiliaryArray[j++];\r\n\t}\r\n};\r\n","export const getBubbleSortAnimations = (array) => {\r\n\tconst animations = [];\r\n\tif (array.length <= 1) return array;\r\n\tbubbleSort(array, animations);\r\n\treturn animations;\r\n};\r\n\r\nconst bubbleSort = (array, animations) => {\r\n\tfor (let i = 0; i < array.length - 1; i++) {\r\n\t\tfor (let j = 0; j < array.length - i - 1; j++) {\r\n\t\t\tanimations.push({ compare: [ j, j + 1 ], swap: '', first: true });\r\n\t\t\tanimations.push({ compare: [ j, j + 1 ], swap: '', first: false });\r\n\t\t\tif (array[j] > array[j + 1]) {\r\n\t\t\t\tanimations.push({ compare: '', swap: [ j, j + 1, array[j], array[j + 1] ] });\r\n\t\t\t\t[ array[j], array[j + 1] ] = [ array[j + 1], array[j] ];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n","export const getHeapSortAnimations = (array) => {\r\n\tconst animations = [];\r\n\tif (array.length <= 1) return array;\r\n\theapSort(array, animations);\r\n\treturn animations;\r\n};\r\n\r\nconst heapSort = (array, animations) => {\r\n\tlet n = array.length;\r\n\r\n\tfor (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\r\n\t\theapify(array, n, i, animations);\r\n\t}\r\n\r\n\tfor (let i = n - 1; i > 0; i--) {\r\n\t\tanimations.push([ 0, i, array[0], array[i] ]);\r\n\t\tanimations.push([ 0, i, array[0], array[i] ]);\r\n\t\tanimations.push([ 0, i, array[0], array[i] ]);\r\n\t\tlet temp = array[0];\r\n\t\tarray[0] = array[i];\r\n\t\tarray[i] = temp;\r\n\r\n\t\theapify(array, i, 0, animations);\r\n\t}\r\n};\r\n\r\nconst heapify = (array, n, i, animations) => {\r\n\tlet largest = i;\r\n\tlet l = 2 * i + 1;\r\n\tlet r = 2 * i + 2;\r\n\r\n\tif (l < n && array[l] > array[largest]) largest = l;\r\n\r\n\tif (r < n && array[r] > array[largest]) largest = r;\r\n\r\n\tif (largest !== i) {\r\n\t\tanimations.push([ i, largest, array[i], array[largest] ]);\r\n\t\tanimations.push([ i, largest, array[i], array[largest] ]);\r\n\t\tanimations.push([ i, largest, array[i], array[largest] ]);\r\n\t\tlet temp = array[i];\r\n\t\tarray[i] = array[largest];\r\n\t\tarray[largest] = temp;\r\n\r\n\t\theapify(array, n, largest, animations);\r\n\t}\r\n};\r\n","export const getQuickSortAnimations = (array) => {\r\n\tconst animations = [];\r\n\tif (array.length <= 1) return array;\r\n\tquickSort(array, 0, array.length - 1, animations);\r\n\treturn animations;\r\n};\r\n\r\nconst quickSort = (array, l, r, animations) => {\r\n\tif (l < r) {\r\n\t\tlet pi = partition(array, l, r, animations);\r\n\t\tquickSort(array, l, pi - 1, animations);\r\n\t\tquickSort(array, pi + 1, r, animations);\r\n\t}\r\n};\r\n\r\nconst partition = (array, left, right, animations) => {\r\n\tlet pivot = array[right];\r\n\tlet i = left - 1;\r\n\tanimations.push({ pivot: [ right ], swap: '', first: true });\r\n\r\n\tfor (let j = left; j <= right - 1; j++) {\r\n\t\tif (array[j] < pivot) {\r\n\t\t\ti++;\r\n\t\t\tanimations.push({ pivot: '', swap: [ i, j, array[i], array[j] ] });\r\n\t\t\tlet temp = array[i];\r\n\t\t\tarray[i] = array[j];\r\n\t\t\tarray[j] = temp;\r\n\t\t}\r\n\t}\r\n\tanimations.push({ pivot: '', swap: [ i + 1, right, array[i + 1], array[right] ] });\r\n\tlet temp = array[i + 1];\r\n\tarray[i + 1] = array[right];\r\n\tarray[right] = temp;\r\n\tanimations.push({ pivot: [ right ], swap: '', first: false });\r\n\r\n\treturn i + 1;\r\n};\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowSize() {\r\n\tconst { innerWidth: width, innerHeight: height } = window;\r\n\treturn {\r\n\t\twidth,\r\n\t\theight\r\n\t};\r\n}\r\n\r\nexport default function useWindowSize() {\r\n\tconst [ windowSize, setWindowSize ] = useState(getWindowSize());\r\n\r\n\tuseEffect(() => {\r\n\t\tlet isMounted = true;\r\n\t\tfunction handleResize() {\r\n\t\t\tif (isMounted) setWindowSize(getWindowSize());\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', handleResize);\r\n\t\treturn () => {\r\n\t\t\tisMounted = false;\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn windowSize;\r\n}\r\n","import React from 'react';\r\nimport './SortingVisualizer.css';\r\nimport { getMergeSortAnimations } from '../SortingAlgorithms/mergeSort.js';\r\nimport { getBubbleSortAnimations } from '../SortingAlgorithms/bubbleSort.js';\r\nimport { getHeapSortAnimations } from '../SortingAlgorithms/heapSort.js';\r\nimport { getQuickSortAnimations } from '../SortingAlgorithms/quickSort.js';\r\nimport { withHooksHOC } from '../withHooksHOC';\r\n\r\n// Change this value for the speed of the animations.\r\n// const ANIMATION_SPEED_MS = 10;\r\n\r\n// Change this value for the number of bars in the array.\r\n// const NUMBER_OF_ARRAY_BARS = 200;\r\n\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = '#fff';\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nconst SECONDARY_COLOR = '#ff4992';\r\n\r\nclass SortingVisualizer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tarray              : [],\r\n\t\t\tanimationSpeed     : 5,\r\n\t\t\tdisabledButtons    : false,\r\n\t\t\tisAlgorithmRunning : false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.resetArray(70);\r\n\t}\r\n\r\n\tresetArray(size) {\r\n\t\tconst array = [];\r\n\t\tlet maxValue;\r\n\t\tif (this.props.screenWidth < 1000) {\r\n\t\t\tmaxValue = this.props.screenWidth * 0.8;\r\n\t\t} else {\r\n\t\t\tmaxValue = 650;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tarray.push(randomIntFromInterval(5, maxValue));\r\n\t\t}\r\n\t\tthis.setState({ array });\r\n\t}\r\n\r\n\tenableButtons = () => {\r\n\t\tthis.setState({ disabledButtons: false });\r\n\t};\r\n\r\n\tdisableButtons = (algorithm) => {\r\n\t\tthis.setState({ disabledButtons: true }, () => {\r\n\t\t\talgorithm();\r\n\t\t});\r\n\t};\r\n\r\n\tbubbleSort = () => {\r\n\t\tconst animations = getBubbleSortAnimations(this.state.array);\r\n\t\tlet isMobile = this.props.screenWidth < 1000 ? true : false;\r\n\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\t\t\tconst lastOne = i === animations.length - 1 ? true : false;\r\n\t\t\tif (animations[i].compare !== '') {\r\n\t\t\t\tconst [ barOneIdx, barTwoIdx ] = animations[i].compare;\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\t\t\t\tconst color = animations[i].first ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\r\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t} else if (animations[i].swap !== '') {\r\n\t\t\t\tconst [ barOneIdx, barTwoIdx, barOneValue, barTwoValue ] = animations[i].swap;\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (isMobile) {\r\n\t\t\t\t\t\tbarOneStyle.width = `${barTwoValue}px`;\r\n\t\t\t\t\t\tbarTwoStyle.width = `${barOneValue}px`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbarOneStyle.height = `${barTwoValue}px`;\r\n\t\t\t\t\t\tbarTwoStyle.height = `${barOneValue}px`;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\theapSort = () => {\r\n\t\tconst animations = getHeapSortAnimations(this.state.array);\r\n\t\tlet isMobile = this.props.screenWidth < 1000 ? true : false;\r\n\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\t\t\tconst isColorChange = i % 3 !== 2;\r\n\t\t\tconst lastOne = i === animations.length - 1 ? true : false;\r\n\r\n\t\t\tconst [ barOneIdx, barTwoIdx, barOneValue, barTwoValue ] = animations[i];\r\n\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\t\t\tif (isColorChange) {\r\n\t\t\t\tconst color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\r\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t} else {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (isMobile) {\r\n\t\t\t\t\t\tbarOneStyle.width = `${barTwoValue}px`;\r\n\t\t\t\t\t\tbarTwoStyle.width = `${barOneValue}px`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbarOneStyle.height = `${barTwoValue}px`;\r\n\t\t\t\t\t\tbarTwoStyle.height = `${barOneValue}px`;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tmergeSort = () => {\r\n\t\tconst animations = getMergeSortAnimations(this.state.array);\r\n\t\tlet isMobile = this.props.screenWidth < 1000 ? true : false;\r\n\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\t\t\tconst isColorChange = i % 3 !== 2;\r\n\t\t\tconst lastOne = i === animations.length - 1 ? true : false;\r\n\r\n\t\t\tif (isColorChange) {\r\n\t\t\t\tconst [ barOneIdx, barTwoIdx ] = animations[i];\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\r\n\t\t\t\tconst color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\r\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t} else {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tconst [ barOneIdx, newValue ] = animations[i];\r\n\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\t\tif (isMobile) barOneStyle.width = `${newValue}px`;\r\n\t\t\t\t\telse barOneStyle.height = `${newValue}px`;\r\n\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tquickSort = () => {\r\n\t\tconst animations = getQuickSortAnimations(this.state.array);\r\n\t\tlet isMobile = this.props.screenWidth < 1000 ? true : false;\r\n\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\t\t\tconst lastOne = i === animations.length - 1 ? true : false;\r\n\t\t\tif (animations[i].pivot !== '') {\r\n\t\t\t\tconst [ pivot ] = animations[i].pivot;\r\n\t\t\t\tconst pivotStyle = arrayBars[pivot].style;\r\n\t\t\t\tconst color = animations[i].first ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tpivotStyle.backgroundColor = color;\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t} else if (animations[i].swap !== '') {\r\n\t\t\t\tconst [ barOneIdx, barTwoIdx, barOneValue, barTwoValue ] = animations[i].swap;\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (isMobile) {\r\n\t\t\t\t\t\tbarOneStyle.width = `${barTwoValue}px`;\r\n\t\t\t\t\t\tbarTwoStyle.width = `${barOneValue}px`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbarOneStyle.height = `${barTwoValue}px`;\r\n\t\t\t\t\t\tbarTwoStyle.height = `${barOneValue}px`;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tarraySizeChange = (event) => {\r\n\t\tthis.resetArray(event.target.value);\r\n\t};\r\n\r\n\tanimationSpeedChange = (event) => {\r\n\t\tthis.setState({ animationSpeed: -event.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { array } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"hero\">\r\n\t\t\t\t<nav className=\"navbar\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\t\tonClick={() => this.resetArray(this.state.array.length)}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGenerate New Array\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\t\tonClick={() => this.disableButtons(this.bubbleSort)}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBubble Sort\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\t\tonClick={() => this.disableButtons(this.heapSort)}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tHeap Sort\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\t\tonClick={() => this.disableButtons(this.mergeSort)}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tMerge Sort\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\t\tonClick={() => this.disableButtons(this.quickSort)}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tQuick Sort\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\tmin={20}\r\n\t\t\t\t\t\tmax={this.props.screenWidth < 1000 ? 120 : 200}\r\n\t\t\t\t\t\tstep={5}\r\n\t\t\t\t\t\tvalue={this.state.array.length}\r\n\t\t\t\t\t\tclassName=\"slider\"\r\n\t\t\t\t\t\tonChange={this.arraySizeChange}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\tmin={-50}\r\n\t\t\t\t\t\tmax={-0.5}\r\n\t\t\t\t\t\tstep={0.05}\r\n\t\t\t\t\t\tvalue={-this.state.animationSpeed}\r\n\t\t\t\t\t\tclassName=\"slider\"\r\n\t\t\t\t\t\tonChange={this.animationSpeedChange}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<div className=\"array-container\">\r\n\t\t\t\t\t{array.map((value, idx) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"array-bar\"\r\n\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackgroundColor : PRIMARY_COLOR,\r\n\t\t\t\t\t\t\t\twidth           : `${this.props.screenWidth < 1000\r\n\t\t\t\t\t\t\t\t\t? value\r\n\t\t\t\t\t\t\t\t\t: 700 / this.state.array.length}px`,\r\n\t\t\t\t\t\t\t\theight          : `${this.props.screenWidth < 1000\r\n\t\t\t\t\t\t\t\t\t? 400 / this.state.array.length\r\n\t\t\t\t\t\t\t\t\t: value}px`\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport default withHooksHOC(SortingVisualizer);\r\n","import React from 'react';\r\nimport useWindowSize from './hooks/useWindowSize';\r\n\r\nexport const withHooksHOC = (Component) => {\r\n\treturn (props) => {\r\n\t\tconst { width } = useWindowSize();\r\n\r\n\t\treturn <Component screenWidth={width} {...props} />;\r\n\t};\r\n};\r\n","import SortingVisualizer from './SortingVisualizer/SortingVisualizer';\n\nfunction App() {\n\treturn <SortingVisualizer />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}