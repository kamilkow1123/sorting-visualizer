{"version":3,"sources":["SortingAlgorithms/mergeSort.js","SortingAlgorithms/bubbleSort.js","SortingAlgorithms/heapSort.js","SortingAlgorithms/quickSort.js","SortingVisualizer/SortingVisualizer.jsx","App.js","index.js"],"names":["mergeSortHelper","mainArray","startIdx","endIdx","auxiliaryArray","animations","middleIdx","Math","floor","doMerge","k","i","j","push","bubbleSort","array","length","compare","swap","first","heapSort","n","heapify","temp","largest","l","r","quickSort","pi","partition","left","right","pivot","PRIMARY_COLOR","SECONDARY_COLOR","SortingVisualizer","props","enableButtons","setState","disabledButtons","disableButtons","algorithm","getBubbleSortAnimations","state","arrayBars","document","getElementsByClassName","lastOne","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","animationSpeed","barOneHeight","barTwoHeight","height","getHeapSortAnimations","isColorChange","mergeSort","slice","getMergeSortAnimations","newHeight","getQuickSortAnimations","pivotStyle","arraySizeChange","event","resetArray","target","value","animationSpeedChange","isAlgorithmRunning","this","size","min","max","random","className","onClick","disabled","type","step","onChange","map","idx","width","React","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e08230f5.chunk.js","sourcesContent":["export const getMergeSortAnimations = (array) => {\r\n\tconst animations = [];\r\n\tif (array.length <= 1) return array;\r\n\tconst auxiliaryArray = array.slice();\r\n\tmergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n\treturn animations;\r\n};\r\n\r\nconst mergeSortHelper = (mainArray, startIdx, endIdx, auxiliaryArray, animations) => {\r\n\tif (startIdx === endIdx) return;\r\n\tconst middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n\tmergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n\tmergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n\tdoMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n};\r\n\r\nconst doMerge = (mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations) => {\r\n\tlet k = startIdx;\r\n\tlet i = startIdx;\r\n\tlet j = middleIdx + 1;\r\n\r\n\twhile (i <= middleIdx && j <= endIdx) {\r\n\t\t//These are the values that we're comparing; we push them once to change their color\r\n\t\tanimations.push([ i, j ]);\r\n\t\t//These are the values that we're comparing; we push them a second time to revert their color\r\n\t\tanimations.push([ i, j ]);\r\n\r\n\t\tif (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n\t\t\t//We overwrite the value at index k in the original array with the value at index i in the auxiliary array\r\n\t\t\tanimations.push([ k, auxiliaryArray[i] ]);\r\n\t\t\tmainArray[k++] = auxiliaryArray[i++];\r\n\t\t} else {\r\n\t\t\t//We overwrite the value at index k in the original array with the value at index j in the auxiliary array\r\n\t\t\tanimations.push([ k, auxiliaryArray[j] ]);\r\n\t\t\tmainArray[k++] = auxiliaryArray[j++];\r\n\t\t}\r\n\t}\r\n\r\n\twhile (i <= middleIdx) {\r\n\t\t//These are the values that we're comparing; we push them once to change their color\r\n\t\tanimations.push([ i, i ]);\r\n\t\t//These are the values that we're comparing; we push them a second time to revert their color\r\n\t\tanimations.push([ i, i ]);\r\n\t\t//We overwrite the value at index k in the original array with the value at index i in the auxiliary array\r\n\t\tanimations.push([ k, auxiliaryArray[i] ]);\r\n\t\tmainArray[k++] = auxiliaryArray[i++];\r\n\t}\r\n\r\n\twhile (j <= endIdx) {\r\n\t\t//These are the values that we're comparing; we push them once to change their color\r\n\t\tanimations.push([ j, j ]);\r\n\t\t//These are the values that we're comparing; we push them a second time to revert their color\r\n\t\tanimations.push([ j, j ]);\r\n\t\t//We overwrite the value at index k in the original array with the value at index j in the auxiliary array\r\n\t\tanimations.push([ k, auxiliaryArray[j] ]);\r\n\t\tmainArray[k++] = auxiliaryArray[j++];\r\n\t}\r\n};\r\n","export const getBubbleSortAnimations = (array) => {\r\n\tconst animations = [];\r\n\tif (array.length <= 1) return array;\r\n\tbubbleSort(array, animations);\r\n\treturn animations;\r\n};\r\n\r\nconst bubbleSort = (array, animations) => {\r\n\tfor (let i = 0; i < array.length - 1; i++) {\r\n\t\tfor (let j = 0; j < array.length - i - 1; j++) {\r\n\t\t\tanimations.push({ compare: [ j, j + 1 ], swap: '', first: true });\r\n\t\t\tanimations.push({ compare: [ j, j + 1 ], swap: '', first: false });\r\n\t\t\tif (array[j] > array[j + 1]) {\r\n\t\t\t\tanimations.push({ compare: '', swap: [ j, j + 1, array[j], array[j + 1] ] });\r\n\t\t\t\t[ array[j], array[j + 1] ] = [ array[j + 1], array[j] ];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n","export const getHeapSortAnimations = (array) => {\r\n\tconst animations = [];\r\n\tif (array.length <= 1) return array;\r\n\theapSort(array, animations);\r\n\treturn animations;\r\n};\r\n\r\nconst heapSort = (array, animations) => {\r\n\tlet n = array.length;\r\n\r\n\tfor (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\r\n\t\theapify(array, n, i, animations);\r\n\t}\r\n\r\n\tfor (let i = n - 1; i > 0; i--) {\r\n\t\tanimations.push([ 0, i, array[0], array[i] ]);\r\n\t\tanimations.push([ 0, i, array[0], array[i] ]);\r\n\t\tanimations.push([ 0, i, array[0], array[i] ]);\r\n\t\tlet temp = array[0];\r\n\t\tarray[0] = array[i];\r\n\t\tarray[i] = temp;\r\n\r\n\t\theapify(array, i, 0, animations);\r\n\t}\r\n};\r\n\r\nconst heapify = (array, n, i, animations) => {\r\n\tlet largest = i;\r\n\tlet l = 2 * i + 1;\r\n\tlet r = 2 * i + 2;\r\n\r\n\tif (l < n && array[l] > array[largest]) largest = l;\r\n\r\n\tif (r < n && array[r] > array[largest]) largest = r;\r\n\r\n\tif (largest !== i) {\r\n\t\tanimations.push([ i, largest, array[i], array[largest] ]);\r\n\t\tanimations.push([ i, largest, array[i], array[largest] ]);\r\n\t\tanimations.push([ i, largest, array[i], array[largest] ]);\r\n\t\tlet temp = array[i];\r\n\t\tarray[i] = array[largest];\r\n\t\tarray[largest] = temp;\r\n\r\n\t\theapify(array, n, largest, animations);\r\n\t}\r\n};\r\n","export const getQuickSortAnimations = (array) => {\r\n\tconst animations = [];\r\n\tif (array.length <= 1) return array;\r\n\tquickSort(array, 0, array.length - 1, animations);\r\n\treturn animations;\r\n};\r\n\r\nconst quickSort = (array, l, r, animations) => {\r\n\tif (l < r) {\r\n\t\tlet pi = partition(array, l, r, animations);\r\n\t\tquickSort(array, l, pi - 1, animations);\r\n\t\tquickSort(array, pi + 1, r, animations);\r\n\t}\r\n};\r\n\r\nconst partition = (array, left, right, animations) => {\r\n\tlet pivot = array[right];\r\n\tlet i = left - 1;\r\n\tanimations.push({ pivot: [ right ], swap: '', first: true });\r\n\r\n\tfor (let j = left; j <= right - 1; j++) {\r\n\t\tif (array[j] < pivot) {\r\n\t\t\ti++;\r\n\t\t\tanimations.push({ pivot: '', swap: [ i, j, array[i], array[j] ] });\r\n\t\t\tlet temp = array[i];\r\n\t\t\tarray[i] = array[j];\r\n\t\t\tarray[j] = temp;\r\n\t\t}\r\n\t}\r\n\tanimations.push({ pivot: '', swap: [ i + 1, right, array[i + 1], array[right] ] });\r\n\tlet temp = array[i + 1];\r\n\tarray[i + 1] = array[right];\r\n\tarray[right] = temp;\r\n\tanimations.push({ pivot: [ right ], swap: '', first: false });\r\n\r\n\treturn i + 1;\r\n};\r\n","import React from 'react';\r\nimport './SortingVisualizer.css';\r\nimport { getMergeSortAnimations } from '../SortingAlgorithms/mergeSort.js';\r\nimport { getBubbleSortAnimations } from '../SortingAlgorithms/bubbleSort.js';\r\nimport { getHeapSortAnimations } from '../SortingAlgorithms/heapSort.js';\r\nimport { getQuickSortAnimations } from '../SortingAlgorithms/quickSort.js';\r\n\r\n// Change this value for the speed of the animations.\r\n// const ANIMATION_SPEED_MS = 10;\r\n\r\n// Change this value for the number of bars in the array.\r\n// const NUMBER_OF_ARRAY_BARS = 200;\r\n\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = '#fff';\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nconst SECONDARY_COLOR = '#ff4992';\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tarray              : [],\r\n\t\t\tanimationSpeed     : 5,\r\n\t\t\tdisabledButtons    : false,\r\n\t\t\tisAlgorithmRunning : false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.resetArray(150);\r\n\t}\r\n\r\n\tresetArray(size) {\r\n\t\tconst array = [];\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tarray.push(randomIntFromInterval(5, 700));\r\n\t\t}\r\n\t\tthis.setState({ array });\r\n\t}\r\n\r\n\tenableButtons = () => {\r\n\t\tthis.setState({ disabledButtons: false });\r\n\t};\r\n\r\n\tdisableButtons = (algorithm) => {\r\n\t\tthis.setState({ disabledButtons: true }, () => {\r\n\t\t\talgorithm();\r\n\t\t});\r\n\t};\r\n\r\n\tbubbleSort = () => {\r\n\t\tconst animations = getBubbleSortAnimations(this.state.array);\r\n\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\t\t\tconst lastOne = i === animations.length - 1 ? true : false;\r\n\t\t\tif (animations[i].compare !== '') {\r\n\t\t\t\tconst [ barOneIdx, barTwoIdx ] = animations[i].compare;\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\t\t\t\tconst color = animations[i].first ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\r\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t} else if (animations[i].swap !== '') {\r\n\t\t\t\tconst [ barOneIdx, barTwoIdx, barOneHeight, barTwoHeight ] = animations[i].swap;\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarOneStyle.height = `${barTwoHeight}px`;\r\n\t\t\t\t\tbarTwoStyle.height = `${barOneHeight}px`;\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\theapSort = () => {\r\n\t\tconst animations = getHeapSortAnimations(this.state.array);\r\n\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\t\t\tconst isColorChange = i % 3 !== 2;\r\n\t\t\tconst lastOne = i === animations.length - 1 ? true : false;\r\n\r\n\t\t\tconst [ barOneIdx, barTwoIdx, barOneHeight, barTwoHeight ] = animations[i];\r\n\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\t\t\tif (isColorChange) {\r\n\t\t\t\tconst color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\r\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t} else {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarOneStyle.height = `${barTwoHeight}px`;\r\n\t\t\t\t\tbarTwoStyle.height = `${barOneHeight}px`;\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tmergeSort = () => {\r\n\t\tconst animations = getMergeSortAnimations(this.state.array);\r\n\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\t\t\tconst isColorChange = i % 3 !== 2;\r\n\t\t\tconst lastOne = i === animations.length - 1 ? true : false;\r\n\r\n\t\t\tif (isColorChange) {\r\n\t\t\t\tconst [ barOneIdx, barTwoIdx ] = animations[i];\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\r\n\t\t\t\tconst color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\r\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t} else {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tconst [ barOneIdx, newHeight ] = animations[i];\r\n\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\t\tbarOneStyle.height = `${newHeight}px`;\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tquickSort = () => {\r\n\t\tconst animations = getQuickSortAnimations(this.state.array);\r\n\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\t\t\tconst lastOne = i === animations.length - 1 ? true : false;\r\n\t\t\tif (animations[i].pivot !== '') {\r\n\t\t\t\tconst [ pivot ] = animations[i].pivot;\r\n\t\t\t\tconst pivotStyle = arrayBars[pivot].style;\r\n\t\t\t\tconst color = animations[i].first ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tpivotStyle.backgroundColor = color;\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t} else if (animations[i].swap !== '') {\r\n\t\t\t\tconst [ barOneIdx, barTwoIdx, barOneHeight, barTwoHeight ] = animations[i].swap;\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarOneStyle.height = `${barTwoHeight}px`;\r\n\t\t\t\t\tbarTwoStyle.height = `${barOneHeight}px`;\r\n\t\t\t\t\tif (lastOne) this.enableButtons();\r\n\t\t\t\t}, i * this.state.animationSpeed);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tarraySizeChange = (event) => {\r\n\t\tthis.resetArray(event.target.value);\r\n\t};\r\n\r\n\tanimationSpeedChange = (event) => {\r\n\t\tthis.setState({ animationSpeed: -event.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { array } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"hero\">\r\n\t\t\t\t<nav className=\"navbar\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\t\tonClick={() => this.resetArray(this.state.array.length)}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGenerate New Array\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\t\tonClick={() => this.disableButtons(this.bubbleSort)}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBubble Sort\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\t\tonClick={() => this.disableButtons(this.heapSort)}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tHeap Sort\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\t\tonClick={() => this.disableButtons(this.mergeSort)}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tMerge Sort\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\t\tonClick={() => this.disableButtons(this.quickSort)}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tQuick Sort\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\tmin={20}\r\n\t\t\t\t\t\tmax={250}\r\n\t\t\t\t\t\tstep={10}\r\n\t\t\t\t\t\tvalue={this.state.array.length}\r\n\t\t\t\t\t\tclassName=\"slider\"\r\n\t\t\t\t\t\tonChange={this.arraySizeChange}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\tmin={-50}\r\n\t\t\t\t\t\tmax={-0.5}\r\n\t\t\t\t\t\tstep={0.05}\r\n\t\t\t\t\t\tvalue={-this.state.animationSpeed}\r\n\t\t\t\t\t\tclassName=\"slider\"\r\n\t\t\t\t\t\tonChange={this.animationSpeedChange}\r\n\t\t\t\t\t\tdisabled={this.state.disabledButtons}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<div className=\"array-container\">\r\n\t\t\t\t\t{array.map((value, idx) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"array-bar\"\r\n\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackgroundColor : PRIMARY_COLOR,\r\n\t\t\t\t\t\t\t\theight          : `${value}px`,\r\n\t\t\t\t\t\t\t\twidth           : `${750 / this.state.array.length}px`\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import SortingVisualizer from './SortingVisualizer/SortingVisualizer';\n\nfunction App() {\n\treturn <SortingVisualizer />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}